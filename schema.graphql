type Account @entity {
  id: ID!
  signerId: String!
  timestamp: BigInt
}

type Swap @entity {
  id: ID!
  action: String # Added action field to define what kind of action is occuring
  transaction: Transaction!
  timestamp: BigInt!
  pair: Pair!
  sender: String
  from: String
  amount0In: BigInt
  amount1In: BigInt
  amount0Out: BigInt
  amount1Out: BigInt
  to: String
  # logIndex: BigInt 
  # amountUSD: BigDecimal! 
}

type Transaction @entity {
  id: ID! # txn hash
  # blockNumber: BigInt!
  timestamp: BigInt!
  # mints: [Mint]! 
  # burns: [Burn]!
  # swaps: [Swap]!
}

type Pair @entity {
  id: ID! # pair address (corresponding to the pool ID)

  token0: String # Token in (will be associated to Token entity)
  token1: String # Token out (will be associated to Token entity)
}

type AddLiquidity @entity {
  id: ID!
  output: String
  timestamp: BigInt
  functionCalled: String
  functionAction: String
  firstPoolAmount: BigInt
  firstPool: String
  secondPoolAmount: BigInt
  secondPool: String
  sharesMinted: BigInt
}